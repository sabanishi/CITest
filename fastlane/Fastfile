platform :ios do
  desc "Push a new release build to the App Store"
  lane :release do
    api_key = app_store_connect_api_key(
      key_id: ENV['ASC_KEY_ID'], # your key id
      issuer_id: ENV['ASC_ISSUER_ID'], # your issuer id
      key_content: ENV['ASC_KEY_CONTENT'], # your secret key body
      # ex) key_content: '-----BEGIN PRIVATE KEY-----\nfoobar\n-----END PRIVATE KEY-----'
    )
    upload_to_app_store(
      api_key: api_key, # pass api_key
      force: true,
      skip_screenshots: true,
      skip_metadata: true
    )
  end

  desc "Create .ipa"
  lane :build do
    certificates
    # Unity-iPhoneターゲットの署名設定を手動署名に設定
    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: ENV['APPLE_TEAM_ID'],
      code_sign_identity: "Apple Distribution: #{ENV['APPLE_TEAM_NAME']} (#{ENV['APPLE_TEAM_ID']})",
      profile_name: "match AppStore #{ENV['IOS_APP_ID']}",
      path: "#{ENV['IOS_BUILD_PATH']}/Unity-iPhone.xcodeproj",
      targets: ["Unity-iPhone"],
      build_configurations: ["Release", "Debug"]
    )

    gym(
      workspace: "#{ENV['IOS_BUILD_PATH']}/Unity-iPhone.xcworkspace",
      scheme: "Unity-iPhone",
      clean: true,
      export_method: "app-store",
      export_team_id: ENV['APPLE_TEAM_ID'],
      export_options: {
        provisioningProfiles: {
          "#{ENV['IOS_APP_ID']}" => "match AppStore #{ENV['IOS_APP_ID']}"
        },
        signingStyle: "manual",
        teamID: ENV['APPLE_TEAM_ID']
      }
    )
  end

  desc "Synchronize certificates"
  lane :certificates do
    match(
      type: "appstore",
      readonly: true,
      team_id: ENV['APPLE_TEAM_ID']
    )
  end
end
