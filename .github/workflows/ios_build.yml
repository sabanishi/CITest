name: Development build

on:
  push:
    branches:
      - main

jobs:
  build_unity:
    name: Build ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - iOS
        

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: Unity/Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      - name: Build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Custom
          version: 0.1.${{ github.run_number }}

      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  build_xcode:
    name: Build xcode project
    runs-on: macos-latest
    needs: build_unity

    env:
      IOS_APP_ID: dev.kyubuns.test
      IOS_BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
      CERTIFICATES_PATH: ${{ format('{0}/Certificates.p12', github.workspace) }}
      MOBILEPROVISION_PATH: ${{ format('{0}/Target.mobileprovision', github.workspace) }}
      IPA_OUTPUT_PATH: ${{ format('{0}/Build.ipa', github.workspace) }}
      CODESIGNING_IDENTITY: ${{ secrets.CODESIGNING_IDENTITY }}
      CERTIFICATES_PASSWORD: ${{ secrets.CERTIFICATES_PASSWORD }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build-iOS
          path: build/iOS

      - name: Fix File Permissions
        run: |
          find $IOS_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ hashFiles('**/Gemfile.lock') }}

      - name: Write Key Files
        env:
          CERTIFICATES_P12: ${{ secrets.CERTIFICATES_P12 }}
          MOBILEPROVISION: ${{ secrets.MOBILEPROVISION }}
        run: |
          echo "$CERTIFICATES_P12" | base64 --decode > $CERTIFICATES_PATH
          echo "$MOBILEPROVISION" | base64 --decode > $MOBILEPROVISION_PATH

      - name: Build Xcode
        uses: maierj/fastlane-action@v2.0.0
        with:
          lane: 'ios development'

      - uses: actions/upload-artifact@v2
        with:
          name: Build-iOS-ipa
          path: ${{ env.IPA_OUTPUT_PATH }}

      - name: Cleanup
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: Build-iOS

  # FastlaneでAppCenterにアップロードするところまで行っても良かったものの、macOSの稼働時間を減らすためにlinuxで行っている
  upload_appcenter:
    name: Upload ipa to AppCenter
    runs-on: ubuntu-latest
    needs: build_xcode

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build-iOS-ipa

      - name: Upload to App Center
        uses: wzieba/AppCenter-Github-Action@v1
        with:
          appName: kyubuns/Test
          token: ${{ secrets.APPCENTER_API_TOKEN }}
          file: Build.ipa
          group: Internal

      - name: Cleanup
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: Build-iOS-ipa