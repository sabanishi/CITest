name: iOS Build

on:
  workflow_dispatch: {}

jobs:
  build_unity:
    name: Build ${{matrix.targetPlatform}}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - iOS
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - uses: actions/cache@v2
        with:
        path: Unity/Library
        key: Library-${{matrix.targetPlatform}}
        restore-keys: |
          Library-
      
      - name: Build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: Unity
          targetPlatform: ${{matrix.targetPlatform}}
          versioning: Custom
          version: 0.1.${{github.run_number}}
      
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{matrix.targetPlatform}}
          path: build/${{matrix.targetPlatform}}
    
  build_xcode:
    name: Build Xcode Project
    runs-on: macos-latest
    needs: build_unity

    env:
      IOS_APP_ID: dev.sabanishi.test
      IOS_BUILD_PATH: ${{format('{0}/build/iOS', github.workspace)}}
      CERTIFICATES_PATH: ${{format('{0}/Certificates.p12',github.workspace)}}
      MOBILEPROVISION_PATH: ${{format('{0}/Target.mobileprovision',github.workspace)}}
      IPA_OUTPUT_PATH: ${{format('{0}/Buikd.ipa',github.workspace)}}
      CODESIGNING_IDENTITY: ${{secrets.CODESIGNING_IDENTITY}}
      CERTIFICATES_PASSWORD: ${{secrets.CERTIFICATES_PASSWORD}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build-iOS
          path: build/iOS

      - name: Fix File Permissions
        run: |
          find $IOS_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
      
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{runner.os}}-${{hashFiles('**/Gamefile.lock')}}

      - name: Write Key Files
        env:
          CERTIFICATES_P12: ${{secrets.CERTIFICATES_P12}}
          MOBILEPROVISION: ${{secrets.MOBILEPROVISION}}
        run: |
          echo $CERTIFICATES_P12 | base64 -d > $CERTIFICATES_PATH
          echo $MOBILEPROVISION | base64 -d > $MOBILEPROVISION_PATH
      
      - name: Build XCode
        uses: maierj/fastlane-action@v2.0.0
        with:
          lane: 'ios development'

      - uses: actions/upload-artifact@v2
        with:
          name: Build-iOS-ipa
          path: ${{env.IPA_OUTPUT_PATH}}

      - name: Cleanup
        if: always()
        uses: geekeggo/delete-artifact@v1
        with:
          name: Build-iOS
  
  upload_appcenter:
    name: Upload ipa to AppCenter
    runs-on: ubuntu-latest
    needs: build_xcode

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build-iOS-ipa
      
      - name: Upload to App Center
        uses: wzieba/AppCenter-GitHub-Action@v1
        with:
          appName: sabanishi/Test
          token: ${{secrets.APPCENTER_API_TOKEN}}
          file: Build.ipa
          group: Internal
      
      - name: Cleanup
        if: always()
        uses: geekeggo/delete-artifact@v1
        with:
          name: Build-iOS-ipa
    