name: iOS Build(Self Hosted)

on:
  workflow_dispatch:

jobs:
  build_unity:
    name: Build iOS
    runs-on: self-hosted
    env:
      APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
      APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_TEAM_NAME: ${{ secrets.APPLE_TEAM_NAME }}
      APPLE_ITC_TEAM_ID: ${{ secrets.APPLE_ITC_TEAM_ID }}
      FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
      ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
      ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
      ASC_KEY_CONTENT: ${{ secrets.ASC_KEY_CONTENT }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      MATCH_PERSONAL_ACCESS_TOKEN: ${{ secrets.MATCH_PERSONAL_ACCESS_TOKEN }}
      IOS_APP_ID: com.DefaultCompan.CISample
      IOS_BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
      MATCH_REPOSITORY_ACCOUNT: ${{ secrets.MATCH_REPOSITORY_ACCOUNT }}
      IPA_OUTPUT_PATH: ${{ format('{0}/Build.ipa', github.workspace) }}
      USYM_UPLOAD_AUTH_TOKEN: 'fake'
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      
      - name: Build iOS
        run: |
          UNITY_APP_PATH="/Applications/Unity/Hub/Editor/2022.3.38f1/Unity.app/Contents/MacOS/Unity"
          UNITY_PROJECT_PATH="./"
          UNITY_BUILDE_NAME="BuildScript.BuildForIOS"
          UNITY_LOG_PATH="./build/iOS/build.log"
          PROJECT_DIR="./build/iOS"

          $UNITY_APP_PATH -batchmode \
              -quit \
              -projectPath $UNITY_PROJECT_PATH \
              -executeMethod $UNITY_BUILDE_NAME \
              -logfile $UNITY_LOG_PATH \
              -output-dir $PROJECT_DIR

          if [ $? -eq 1 ]; then
              echo "error!! check logfile: ${UNITY_LOG_PATH}"
              exit 1
          fi

          echo "unity build success!!"

      - name: Cache Ruby Gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: bundle-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            bundle-

      - name: Cache restore cocoapods
        uses: actions/cache@v2
        if: ${{ always() }}
        with:
          path: |
            build/iOS/iOS/Pods
            ~/.cocoapods/repos
          key: Pods-${{ hashFiles('**/Podfile') }}
          restore-keys: Pods-

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Build XCode
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: 'ios build'

      - name: Upload to the App Store
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'ios release'

      - name: Cleanup
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: Build-iOS